/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthImport } from './routes/auth'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as BandiImport } from './routes/bandi'
import { Route as CorsiImport } from './routes/corsi'
import { Route as EventiImport } from './routes/eventi'
import { Route as ProgettiImport } from './routes/progetti'
import { Route as VolontariatoImport } from './routes/volontariato'
import { Route as NewsImport } from './routes/news'
import { Route as PartnersImport } from './routes/partners'
import { Route as DashboardImport } from './routes/dashboard/index'
import { Route as DashboardAdminImport } from './routes/dashboard/admin'
import { Route as DashboardUserImport } from './routes/dashboard/user'
import { Route as DashboardPartnerImport } from './routes/dashboard/partner'

// Create Virtual Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const BandiRoute = BandiImport.update({
  path: '/bandi',
  getParentRoute: () => rootRoute,
} as any)

const CorsiRoute = CorsiImport.update({
  path: '/corsi',
  getParentRoute: () => rootRoute,
} as any)

const EventiRoute = EventiImport.update({
  path: '/eventi',
  getParentRoute: () => rootRoute,
} as any)

const ProgettiRoute = ProgettiImport.update({
  path: '/progetti',
  getParentRoute: () => rootRoute,
} as any)

const VolontariatoRoute = VolontariatoImport.update({
  path: '/volontariato',
  getParentRoute: () => rootRoute,
} as any)

const NewsRoute = NewsImport.update({
  path: '/news',
  getParentRoute: () => rootRoute,
} as any)

const PartnersRoute = PartnersImport.update({
  path: '/partners',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAdminRoute = DashboardAdminImport.update({
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardUserRoute = DashboardUserImport.update({
  path: '/user',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPartnerRoute = DashboardPartnerImport.update({
  path: '/partner',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthRoute
    }
    '/bandi': {
      id: '/bandi'
      path: '/bandi'
      fullPath: '/bandi'
      preLoaderRoute: typeof BandiImport
      parentRoute: typeof rootRoute
    }
    '/corsi': {
      id: '/corsi'
      path: '/corsi'
      fullPath: '/corsi'
      preLoaderRoute: typeof CorsiImport
      parentRoute: typeof rootRoute
    }
    '/eventi': {
      id: '/eventi'
      path: '/eventi'
      fullPath: '/eventi'
      preLoaderRoute: typeof EventiImport
      parentRoute: typeof rootRoute
    }
    '/progetti': {
      id: '/progetti'
      path: '/progetti'
      fullPath: '/progetti'
      preLoaderRoute: typeof ProgettiImport
      parentRoute: typeof rootRoute
    }
    '/volontariato': {
      id: '/volontariato'
      path: '/volontariato'
      fullPath: '/volontariato'
      preLoaderRoute: typeof VolontariatoImport
      parentRoute: typeof rootRoute
    }
    '/news': {
      id: '/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsImport
      parentRoute: typeof rootRoute
    }
    '/partners': {
      id: '/partners'
      path: '/partners'
      fullPath: '/partners'
      preLoaderRoute: typeof PartnersImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user': {
      id: '/dashboard/user'
      path: '/user'
      fullPath: '/dashboard/user'
      preLoaderRoute: typeof DashboardUserImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/partner': {
      id: '/dashboard/partner'
      path: '/partner'
      fullPath: '/dashboard/partner'
      preLoaderRoute: typeof DashboardPartnerImport
      parentRoute: typeof DashboardRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({ 
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({
    AuthLoginRoute,
    AuthRegisterRoute,
  }),
  BandiRoute,
  CorsiRoute,
  EventiRoute,
  ProgettiRoute,
  VolontariatoRoute,
  NewsRoute,
  PartnersRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardAdminRoute,
    DashboardUserRoute,
    DashboardPartnerRoute,
  }),
})

/* prettier-ignore-end */
